︠b0f20910-7fb0-4d7c-b498-a9c6fad14e70︠
def modular_sqrt(a, p):
    if legendre_symbol(a, p) != 1:
        return 0
    elif a == 0:
        return 0
    elif p == 2:
        return p
    elif p % 4 == 3:
        return pow(a, (p + 1) / 4, p)
    s = p - 1
    e = 0
    while s % 2 == 0:
        s /= 2
        e += 1
    n = 2
    while legendre_symbol(n, p) != -1:
        n += 1
    x = pow(a, (s + 1) / 2, p)
    b = pow(a, s, p)
    g = pow(n, s, p)
    r = e
    while True:
        t = b
        m = 0
        for m in xrange(r):
            if t == 1:
                break
            t = pow(t, 2, p)
        if m == 0:
            return x
        gs = pow(g, 2 ** (r - m - 1), p)
        g = (gs * gs) % p
        x = (x * gs) % p
        b = (b * g) % p
        r = m
def legendre_symbol(a, p):
    ls = pow(a, (p - 1) / 2, p)
    return -1 if ls == p - 1 else ls

t = cputime()
R.<x> = IntegerModRing(next_prime(10^450))[]
p = next_prime(10^450)
a = next_prime(9^402)
b = next_prime(8^355)
c = next_prime(7^301)
D = b*b - 4*a*c
modular_sqrt(D,p)
mod((modular_sqrt(D,p)-b)/(2*a),p)
print('x1 = ',mod((modular_sqrt(D,p)-b)/(2*a),p))
print('x2 = ',mod((p-modular_sqrt(D,p)-b)/(2*a),p))
cputime(t)
︡899ff993-0a7a-4d70-8315-f05e69d205e0︡{"stdout":"97262267563924009711100350205001569098541118869487329515714588211189294820064880429216782726710107456654626786730755460329148450075477125822606843706151812702642503785630258132117624284251589828452301517213722231244040557609718868986671193780054654976572493595210246989091636542770253277189391071903091743218525718916073308169972063064094205499820367900879094075485929692587303457623158100249486385574104206819768212284017774401478317627116495413600\n"}︡{"stdout":"\nCPU time: 0.01 s, Wall time: 0.01 s\n"}︡{"stdout":"648263647905011054039700592555384201601007755188618265518209745426065034916744046362374653818459901024561748279086997889489085972093202455732081617769077854622312361946074547640948080886592363662193248216321748476940466104959573118244876447108285485913505767522740864635483387227402195442499018722383783843429470999870445211963984368337013079906232898935761291245453945021370650797198704957578036397508461802771505466222922826629503766287123370053294\n"}︡{"stdout":"\nCPU time: 0.01 s, Wall time: 0.02 s\n"}︡{"stdout":"('x1 = ', 648263647905011054039700592555384201601007755188618265518209745426065034916744046362374653818459901024561748279086997889489085972093202455732081617769077854622312361946074547640948080886592363662193248216321748476940466104959573118244876447108285485913505767522740864635483387227402195442499018722383783843429470999870445211963984368337013079906232898935761291245453945021370650797198704957578036397508461802771505466222922826629503766287123370053294)\n"}︡{"stdout":"\nCPU time: 0.01 s, Wall time: 0.01 s\n"}︡{"stdout":"('x2 = ', 77928482653282582672125712303298626434325378922529673529679026359578841889564028661463062185689227297621423813137209238131762971710322168430937870784766647450026564602671489291303332571360984857148627640047090923160089011136817962183494653339087570980835335181857527097483522942373165618348341043568657392441883268998523642727209723173083360887302925049386795441915539367333081914289228311799309422884024169968188446253890335171364354077439239252399)\n"}︡{"stdout":"\nCPU time: 0.01 s, Wall time: 0.01 s\n"}︡{"stdout":"27.524422000000072\n"}︡{"done":true}
︠1a89181d-bbeb-4929-a63f-1819c5261183s︠
t = cputime()
R.<x> = IntegerModRing(next_prime(10^450))[]
p = next_prime(10^450)
a = next_prime(9^402)
b = next_prime(8^355)
c = next_prime(7^301)
%time (a*x^2+b*x+c).roots()
cputime(t)
︡f0fdf32c-9444-419f-b063-c3f3c82491d1︡{"stdout":"[(648263647905011054039700592555384201601007755188618265518209745426065034916744046362374653818459901024561748279086997889489085972093202455732081617769077854622312361946074547640948080886592363662193248216321748476940466104959573118244876447108285485913505767522740864635483387227402195442499018722383783843429470999870445211963984368337013079906232898935761291245453945021370650797198704957578036397508461802771505466222922826629503766287123370053294, 1), (77928482653282582672125712303298626434325378922529673529679026359578841889564028661463062185689227297621423813137209238131762971710322168430937870784766647450026564602671489291303332571360984857148627640047090923160089011136817962183494653339087570980835335181857527097483522942373165618348341043568657392441883268998523642727209723173083360887302925049386795441915539367333081914289228311799309422884024169968188446253890335171364354077439239252399, 1)]"}︡{"stdout":"\n"}︡{"stdout":"\nCPU time: 14.92 s, Wall time: 15.35 s\n"}︡{"stdout":"47.20999500000005\n"}︡{"done":true}









